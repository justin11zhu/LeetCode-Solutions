#https://leetcode.com/problems/kth-smallest-element-in-a-bst/description/
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:
        count = 0
        def inorder(node):
            nonlocal count
            if not node:
                return -1
        
            left = inorder(node.left)
            count += 1
            if count == k:
                return node.val
            right = inorder(node.right)

            
            return max(left, right)

        return inorder(root)